{"version":3,"file":"chartview.min.js","sources":["../src/chartview.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/*\n * feedbackbox\n *\n * @version    1.0.0\n * @package    mod_feedbackbox\n * @author     Vincent Schneider <vincent.schneider@sudile.com> 2020\n * @copyright  2020 Sudile GbR (http://www.sudile.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'mod_feedbackbox/chart'],\n    function($, ajax, Chart) {\n        var images = [];\n        var roundstr = '';\n\n        function getSVG(src) {\n            var request = new XMLHttpRequest();\n            request.open('GET', src, false);\n            request.onload = function() {\n                var parser = new DOMParser();\n                var result = parser.parseFromString(request.responseText, 'text/xml');\n                var inlineSVG = result.getElementsByTagName(\"svg\")[0];\n                inlineSVG.setAttribute('width', '48px');\n                inlineSVG.setAttribute('height', '48px');\n                var svg64 = btoa(new XMLSerializer().serializeToString(inlineSVG));\n                var img64 = 'data:image/svg+xml;base64,' + svg64;\n                var image = new Image();\n                image.src = img64;\n                image.onload = function() {\n                    var canvas = document.createElement(\"canvas\");\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    var ctx = canvas.getContext(\"2d\");\n                    ctx.drawImage(this, 0, 0);\n                    var img = new Image();\n                    img.src = canvas.toDataURL(\"image/png\");\n                    images.push(img);\n                };\n            };\n            request.send();\n        }\n\n        var obj = {\n            init: function(feedbackboxid, action, mixedvalue, roundstring) {\n                roundstr = roundstring;\n                $('#feedbackboxicons').children().each(function() {\n                    getSVG($(this).attr('src'));\n                });\n                if (action === 'single') {\n                    let promises = ajax.call([\n                        {\n                            methodname: 'mod_feedbackbox_chartdata_single',\n                            args: {feedbackboxid: feedbackboxid, turnus: mixedvalue}\n                        }\n                    ]);\n                    promises[0].done(function(response) {\n                        let ctxc = $('#studchart');\n                        new Chart(ctxc, {\n                            type: 'bar',\n                            plugins: [{\n                                afterDraw: chart => {\n                                    var ctx = chart.chart.ctx;\n                                    var xAxis = chart.scales['x-axis-0'];\n                                    var yAxis = chart.scales['y-axis-0'];\n                                    yAxis.ticks.forEach((value, index) => {\n                                        if (index in images) {\n                                            var x = xAxis.getPixelForTick(index);\n                                            ctx.drawImage(images[index], x - 15, yAxis.bottom, 30, 30);\n                                        }\n                                    });\n                                }\n                            }],\n                            data: {\n                                labels: ['', '', '', ''],\n                                datasets: [{\n                                    data: response.data,\n                                    maxBarThickness: 50,\n                                }],\n                            },\n                            options: {\n                                responsive: true,\n                                maintainAspectRatio: false,\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: true\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(255, 172, 37, 0.2)',\n                                        borderColor: 'rgba(255, 172, 37, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: false,\n                                        gridLines: {\n                                            display: false\n                                        },\n                                        ticks: {\n                                            suggestedMin: 0,\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                }\n                            }\n                        });\n                    });\n                } else {\n                    let promises = ajax.call([\n                        {methodname: 'mod_feedbackbox_chartdata_multiple', args: {feedbackboxid: feedbackboxid}}\n                    ]);\n                    promises[0].done(function(response) {\n                        let datarounds = [];\n                        let dataparticipants = [];\n                        let datarating = [];\n                        let counter = 1;\n                        response.data.forEach(function(entry) {\n                            dataparticipants.push(entry.participants);\n                            datarating.push(entry.rating);\n                            datarounds.push(roundstr + ' ' + (counter++)); // Todo: fix entry (we need lang strign)\n                        });\n                        let ctxp = $('#participants');\n                        let myChartp = new Chart(ctxp, {\n                            type: 'bar',\n                            data: {\n                                labels: datarounds,\n                                datasets: [{\n                                    data: dataparticipants,\n                                    maxBarThickness: 50,\n                                }]\n                            },\n                            options: {\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: true\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: true,\n                                        ticks: {\n                                            suggestedMin: 0,\n                                            suggestedMax: mixedvalue,\n                                            callback: function(value) {\n                                                if (value % 1 === 0) {\n                                                    return value;\n                                                }\n                                            }\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(164, 164, 164, 0.2)',\n                                        borderColor: 'rgba(164, 164, 164, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                maintainAspectRatio: false\n                            }\n                        });\n                        let ctxc = $('#coursehealth');\n                        let myChartc = new Chart(ctxc, {\n                            type: 'bar',\n                            plugins: [{\n                                afterDraw: chart => {\n                                    var ctx = chart.chart.ctx;\n                                    var yAxis = chart.scales['y-axis-0'];\n                                    yAxis.ticks.forEach((value, index) => {\n                                        if (value >= 1 && value <= 4 && value % 1 === 0) {\n                                            var y = yAxis.getPixelForTick(index);\n                                            ctx.drawImage(images[images.length - value], 0, y, 30, 30);\n                                        }\n                                    });\n                                }\n                            }],\n                            data: {\n                                labels: datarounds,\n                                datasets: [{\n                                    data: datarating,\n                                    maxBarThickness: 50,\n                                }]\n                            },\n                            options: {\n                                layout: {\n                                    padding: {\n                                        left: 30,\n                                    }\n                                },\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: true\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: false,\n                                        ticks: {\n                                            beginAtZero: false,\n                                            suggestedMin: 1,\n                                            suggestedMax: 4,\n                                            callback: function(value) {\n                                                if (value % 1 === 0) {\n                                                    return value;\n                                                }\n                                            }\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(255, 172, 37, 0.2)',\n                                        borderColor: 'rgba(255, 172, 37, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                            }\n                        });\n                    });\n                }\n            }\n        };\n        return obj;\n    }\n);\n"],"names":["define","$","ajax","Chart","images","roundstr","init","feedbackboxid","action","mixedvalue","roundstring","children","each","src","request","this","attr","XMLHttpRequest","open","onload","inlineSVG","DOMParser","parseFromString","responseText","getElementsByTagName","setAttribute","img64","btoa","XMLSerializer","serializeToString","image","Image","canvas","document","createElement","width","height","getContext","drawImage","img","toDataURL","push","send","call","methodname","args","turnus","done","response","ctxc","type","plugins","afterDraw","chart","ctx","xAxis","scales","yAxis","ticks","forEach","value","index","x","getPixelForTick","bottom","data","labels","datasets","maxBarThickness","options","responsive","maintainAspectRatio","legend","display","tooltips","enabled","elements","rectangle","backgroundColor","borderColor","borderWidth","yAxes","gridLines","suggestedMin","xAxes","datarounds","dataparticipants","datarating","counter","entry","participants","rating","ctxp","suggestedMax","callback","y","length","layout","padding","left","beginAtZero"],"mappings":"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"}