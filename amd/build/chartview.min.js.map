{"version":3,"sources":["../src/chartview.js"],"names":["define","$","ajax","Chart","images","getSVG","src","request","XMLHttpRequest","open","onload","parser","DOMParser","result","parseFromString","responseText","inlineSVG","getElementsByTagName","setAttribute","svg64","btoa","XMLSerializer","serializeToString","image","Image","canvas","document","createElement","width","height","ctx","getContext","drawImage","img","toDataURL","push","send","init","feedbackboxid","action","mixedvalue","children","each","attr","promises","call","methodname","args","turnus","done","response","ctxc","type","plugins","afterDraw","chart","xAxis","scales","yAxis","ticks","forEach","value","index","x","getPixelForTick","bottom","data","labels","datasets","maxBarThickness","options","responsive","maintainAspectRatio","legend","display","tooltips","enabled","elements","rectangle","backgroundColor","borderColor","borderWidth","yAxes","gridLines","suggestedMin","xAxes","datarounds","dataparticipants","datarating","counter","entry","participants","rating","ctxp","myChartp","suggestedMax","callback","myChartc","y","layout","padding","left","beginAtZero"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/*\n * feedbackbox\n *\n * @version    1.0.0\n * @package    mod_feedbackbox\n * @author     Vincent Schneider <vincent.schneider@sudile.com> 2020\n * @copyright  2020 Sudile GbR (http://www.sudile.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'mod_feedbackbox/chart'],\n    function ($, ajax, Chart) {\n        var images = [];\n\n        function getSVG(src) {\n            var request = new XMLHttpRequest();\n            request.open('GET', src, false);\n            request.onload = function () {\n                var parser = new DOMParser();\n                var result = parser.parseFromString(request.responseText, 'text/xml');\n                var inlineSVG = result.getElementsByTagName(\"svg\")[0];\n                inlineSVG.setAttribute('width', '48px');\n                inlineSVG.setAttribute('height', '48px');\n                var svg64 = btoa(new XMLSerializer().serializeToString(inlineSVG));\n                var img64 = 'data:image/svg+xml;base64,' + svg64;\n                var image = new Image();\n                image.src = img64;\n                image.onload = function () {\n                    var canvas = document.createElement(\"canvas\");\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    var ctx = canvas.getContext(\"2d\");\n                    ctx.drawImage(this, 0, 0);\n                    var img = new Image();\n                    img.src = canvas.toDataURL(\"image/png\");\n                    images.push(img);\n                };\n            };\n            request.send();\n        }\n\n        var obj = {\n            init: function (feedbackboxid, action, mixedvalue) {\n                $('#feedbackboxicons').children().each(function () {\n                    getSVG($(this).attr('src'));\n                });\n                if (action === 'single') {\n                    let promises = ajax.call([\n                        {\n                            methodname: 'mod_feedbackbox_chartdata_single',\n                            args: {feedbackboxid: feedbackboxid, turnus: mixedvalue}\n                        }\n                    ]);\n                    promises[0].done(function (response) {\n                        let ctxc = $('#studchart');\n                        new Chart(ctxc, {\n                            type: 'bar',\n                            plugins: [{\n                                afterDraw: chart => {\n                                    var ctx = chart.chart.ctx;\n                                    var xAxis = chart.scales['x-axis-0'];\n                                    var yAxis = chart.scales['y-axis-0'];\n                                    yAxis.ticks.forEach((value, index) => {\n                                        if (index in images) {\n                                            var x = xAxis.getPixelForTick(index);\n                                            ctx.drawImage(images[index], x - 15, yAxis.bottom, 30, 30);\n                                        }\n                                    });\n                                }\n                            }],\n                            data: {\n                                labels: ['', '', '', ''],\n                                datasets: [{\n                                    data: response.data,\n                                    maxBarThickness: 50,\n                                }],\n                            },\n                            options: {\n                                responsive: true,\n                                maintainAspectRatio: false,\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: true\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(255, 172, 37, 0.2)',\n                                        borderColor: 'rgba(255, 172, 37, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: false,\n                                        gridLines: {\n                                            display: false\n                                        },\n                                        ticks: {\n                                            suggestedMin: 0,\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                }\n                            }\n                        });\n                    });\n                } else {\n                    let promises = ajax.call([\n                        {methodname: 'mod_feedbackbox_chartdata_multiple', args: {feedbackboxid: feedbackboxid}}\n                    ]);\n                    promises[0].done(function (response) {\n                        let datarounds = [];\n                        let dataparticipants = [];\n                        let datarating = [];\n                        let counter = 1;\n                        response.data.forEach(function (entry) {\n                            dataparticipants.push(entry.participants);\n                            datarating.push(entry.rating);\n                            datarounds.push('Runde ' + (counter++));\n                        });\n                        let ctxp = $('#participants');\n                        let myChartp = new Chart(ctxp, {\n                            type: 'bar',\n                            data: {\n                                labels: datarounds,\n                                datasets: [{\n                                    data: dataparticipants,\n                                    maxBarThickness: 50,\n                                }]\n                            },\n                            options: {\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: false\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: true,\n                                        ticks: {\n                                            suggestedMin: 0,\n                                            suggestedMax: mixedvalue,\n                                            callback: function (value) {\n                                                if (value % 1 === 0) {\n                                                    return value;\n                                                }\n                                            }\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(164, 164, 164, 0.2)',\n                                        borderColor: 'rgba(164, 164, 164, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                maintainAspectRatio: false\n                            }\n                        });\n                        let ctxc = $('#coursehealth');\n                        let myChartc = new Chart(ctxc, {\n                            type: 'bar',\n                            plugins: [{\n                                afterDraw: chart => {\n                                    var ctx = chart.chart.ctx;\n                                    var yAxis = chart.scales['y-axis-0'];\n                                    yAxis.ticks.forEach((value, index) => {\n                                        if (value >= 1 && value <= 4 && value % 1 === 0) {\n                                            var y = yAxis.getPixelForTick(index);\n                                            ctx.drawImage(images[value - 1], 0, y, 30, 30);\n                                        }\n                                    });\n                                }\n                            }],\n                            data: {\n                                labels: datarounds,\n                                datasets: [{\n                                    data: datarating,\n                                    maxBarThickness: 50,\n                                }]\n                            },\n                            options: {\n                                layout: {\n                                    padding: {\n                                        left: 30,\n                                    }\n                                },\n                                legend: {\n                                    display: false\n                                },\n                                tooltips: {\n                                    enabled: false\n                                },\n                                scales: {\n                                    yAxes: [{\n                                        display: false,\n                                        ticks: {\n                                            beginAtZero: false,\n                                            suggestedMin: 1,\n                                            suggestedMax: 4,\n                                            callback: function (value) {\n                                                if (value % 1 === 0) {\n                                                    return value;\n                                                }\n                                            }\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    xAxes: [{\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                },\n                                elements: {\n                                    rectangle: {\n                                        backgroundColor: 'rgba(255, 172, 37, 0.2)',\n                                        borderColor: 'rgba(255, 172, 37, 1)',\n                                        borderWidth: 2\n                                    }\n                                },\n                                maintainAspectRatio: false,\n                            }\n                        });\n                    });\n                }\n            }\n        };\n        return obj;\n    }\n);\n"],"file":"chartview.min.js"}